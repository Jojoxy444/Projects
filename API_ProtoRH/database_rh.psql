SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: RequestRH; Type: TABLE; Schema: public; Owner: joan
--

CREATE TABLE public."RequestRH" (
    id integer NOT NULL,
    id_user integer,
    content json,
    registration_date date,
    visibility boolean,
    close boolean,
    last_action date,
    delete_date date
);


ALTER TABLE public."RequestRH" OWNER TO joan;

--
-- Name: RequestRH_id_seq; Type: SEQUENCE; Schema: public; Owner: joan
--

CREATE SEQUENCE public."RequestRH_id_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."RequestRH_id_seq" OWNER TO joan;

--
-- Name: RequestRH_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: joan
--

ALTER SEQUENCE public."RequestRH_id_seq" OWNED BY public."RequestRH".id;


--
-- Name: departement; Type: TABLE; Schema: public; Owner: joan
--

CREATE TABLE public.departement (
    id integer NOT NULL,
    name character varying
);


ALTER TABLE public.departement OWNER TO joan;

--
-- Name: departement_id_seq; Type: SEQUENCE; Schema: public; Owner: joan
--

CREATE SEQUENCE public.departement_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.departement_id_seq OWNER TO joan;

--
-- Name: departement_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: joan
--

ALTER SEQUENCE public.departement_id_seq OWNED BY public.departement.id;


--
-- Name: user; Type: TABLE; Schema: public; Owner: joan
--

CREATE TABLE public."user" (
    id integer NOT NULL,
    mail character varying,
    password character varying,
    firstname character varying,
    lastname character varying,
    birthday_date date,
    address character varying,
    postal_code integer,
    age integer,
    meta json,
    registration_date date,
    token character varying,
    role character varying,
    departement character varying[]
);


ALTER TABLE public."user" OWNER TO joan;

--
-- Name: user_id_seq; Type: SEQUENCE; Schema: public; Owner: joan
--

CREATE SEQUENCE public.user_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.user_id_seq OWNER TO joan;

--
-- Name: user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: joan
--

ALTER SEQUENCE public.user_id_seq OWNED BY public."user".id;


--
-- Name: RequestRH id; Type: DEFAULT; Schema: public; Owner: joan
--

ALTER TABLE ONLY public."RequestRH" ALTER COLUMN id SET DEFAULT nextval('public."RequestRH_id_seq"'::regclass);


--
-- Name: departement id; Type: DEFAULT; Schema: public; Owner: joan
--

ALTER TABLE ONLY public.departement ALTER COLUMN id SET DEFAULT nextval('public.departement_id_seq'::regclass);


--
-- Name: user id; Type: DEFAULT; Schema: public; Owner: joan
--

ALTER TABLE ONLY public."user" ALTER COLUMN id SET DEFAULT nextval('public.user_id_seq'::regclass);


--
-- Data for Name: RequestRH; Type: TABLE DATA; Schema: public; Owner: joan
--

COPY public."RequestRH" (id, id_user, content, registration_date, visibility, close, last_action, delete_date) FROM stdin;
\.


--
-- Data for Name: departement; Type: TABLE DATA; Schema: public; Owner: joan
--

COPY public.departement (id, name) FROM stdin;
\.


--
-- Data for Name: user; Type: TABLE DATA; Schema: public; Owner: joan
--

COPY public."user" (id, mail, password, firstname, lastname, birthday_date, address, postal_code, age, meta, registration_date, token, role, departement) FROM stdin;
\.


--
-- Name: RequestRH_id_seq; Type: SEQUENCE SET; Schema: public; Owner: joan
--

SELECT pg_catalog.setval('public."RequestRH_id_seq"', 1, false);


--
-- Name: departement_id_seq; Type: SEQUENCE SET; Schema: public; Owner: joan
--

SELECT pg_catalog.setval('public.departement_id_seq', 1, false);


--
-- Name: user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: joan
--

SELECT pg_catalog.setval('public.user_id_seq', 1, false);


--
-- Name: RequestRH RequestRH_pkey; Type: CONSTRAINT; Schema: public; Owner: joan
--

ALTER TABLE ONLY public."RequestRH"
    ADD CONSTRAINT "RequestRH_pkey" PRIMARY KEY (id);


--
-- Name: departement departement_pkey; Type: CONSTRAINT; Schema: public; Owner: joan
--

ALTER TABLE ONLY public.departement
    ADD CONSTRAINT departement_pkey PRIMARY KEY (id);


--
-- Name: user user_pkey; Type: CONSTRAINT; Schema: public; Owner: joan
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_pkey PRIMARY KEY (id);


--
-- Name: ix_RequestRH_close; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX "ix_RequestRH_close" ON public."RequestRH" USING btree (close);


--
-- Name: ix_RequestRH_delete_date; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX "ix_RequestRH_delete_date" ON public."RequestRH" USING btree (delete_date);


--
-- Name: ix_RequestRH_id; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX "ix_RequestRH_id" ON public."RequestRH" USING btree (id);


--
-- Name: ix_RequestRH_id_user; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX "ix_RequestRH_id_user" ON public."RequestRH" USING btree (id_user);


--
-- Name: ix_RequestRH_last_action; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX "ix_RequestRH_last_action" ON public."RequestRH" USING btree (last_action);


--
-- Name: ix_RequestRH_registration_date; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX "ix_RequestRH_registration_date" ON public."RequestRH" USING btree (registration_date);


--
-- Name: ix_RequestRH_visibility; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX "ix_RequestRH_visibility" ON public."RequestRH" USING btree (visibility);


--
-- Name: ix_departement_id; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX ix_departement_id ON public.departement USING btree (id);


--
-- Name: ix_departement_name; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX ix_departement_name ON public.departement USING btree (name);


--
-- Name: ix_user_address; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX ix_user_address ON public."user" USING btree (address);


--
-- Name: ix_user_age; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX ix_user_age ON public."user" USING btree (age);


--
-- Name: ix_user_birthday_date; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX ix_user_birthday_date ON public."user" USING btree (birthday_date);


--
-- Name: ix_user_departement; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX ix_user_departement ON public."user" USING btree (departement);


--
-- Name: ix_user_firstname; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX ix_user_firstname ON public."user" USING btree (firstname);


--
-- Name: ix_user_id; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX ix_user_id ON public."user" USING btree (id);


--
-- Name: ix_user_lastname; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX ix_user_lastname ON public."user" USING btree (lastname);


--
-- Name: ix_user_mail; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX ix_user_mail ON public."user" USING btree (mail);


--
-- Name: ix_user_password; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX ix_user_password ON public."user" USING btree (password);


--
-- Name: ix_user_postal_code; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX ix_user_postal_code ON public."user" USING btree (postal_code);


--
-- Name: ix_user_registration_date; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX ix_user_registration_date ON public."user" USING btree (registration_date);


--
-- Name: ix_user_role; Type: INDEX; Schema: public; Owner: joan
--

CREATE INDEX ix_user_role ON public."user" USING btree (role);


--
-- Name: ix_user_token; Type: INDEX; Schema: public; Owner: joan
--

CREATE UNIQUE INDEX ix_user_token ON public."user" USING btree (token);
